/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package unidad56;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paveg
 */
public class UsoArchivos extends javax.swing.JFrame {

    /**
     * Creates new form UsoArchivos
     */
    public UsoArchivos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTexto = new javax.swing.JTextField();
        btnEscribirInicio = new javax.swing.JButton();
        btnEscribirFinal = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContenido = new javax.swing.JTable();
        btnLlenarTabla = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEscribirInicio.setText("Escribir al inicio");
        btnEscribirInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscribirInicioActionPerformed(evt);
            }
        });

        btnEscribirFinal.setText("Escribir al final");
        btnEscribirFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscribirFinalActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer archivo");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        tblContenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Linea"
            }
        ));
        jScrollPane1.setViewportView(tblContenido);

        btnLlenarTabla.setText("Llenar tabla");
        btnLlenarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarTablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnEscribirFinal)
                    .addComponent(btnEscribirInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTexto))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLlenarTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEscribirInicio))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(btnLeer)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEscribirFinal)
                            .addComponent(btnLlenarTabla)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscribirInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscribirInicioActionPerformed
        //Identificar la ruta del archivo
        String nombreArchivoRelativo="verano.txt";
        String nombreArchivoAbsoluto="c:\\poo\\verano.pvf";
        BufferedWriter escritor=null;
        try{
            //Crear el buffer y abrir el archivo
            escritor=new BufferedWriter(
                    new FileWriter(nombreArchivoAbsoluto)
            );
            String texto=txtTexto.getText();
            escritor.write(texto);
            
        }catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }catch(IOException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            //Intentar cerrar y liberar el archivo (confirmar el guardado)
            try{
                escritor.close();
            }catch(Exception ex){
            }
        }
    }//GEN-LAST:event_btnEscribirInicioActionPerformed

    private void btnEscribirFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscribirFinalActionPerformed
        //Identificar la ruta del archivo
        String nombreArchivoRelativo="verano.txt";
        String nombreArchivoAbsoluto="c:\\poo\\verano.pvf";
        BufferedWriter escritor=null;
        try{
            //Crear el buffer y abrir el archivo
            //El argumento true indica que queremos escribir al final del
            //archivo, conservando todo los que tenia antes de escribir
            escritor=new BufferedWriter(
                    new FileWriter(nombreArchivoAbsoluto,true)
            );
            String texto=txtTexto.getText();
            escritor.write(texto+"\n");
            
        }catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }catch(IOException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            //Intentar cerrar y liberar el archivo (confirmar el guardado)
            try{
                escritor.close();
            }catch(Exception ex){
            }
        }
    }//GEN-LAST:event_btnEscribirFinalActionPerformed

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerActionPerformed
        //Identificar la ruta del archivo
        String nombreArchivoRelativo="verano.txt";
        String nombreArchivoAbsoluto="c:\\poo\\verano.pvf";
        //Scanner lector=null;
        BufferedReader lector=null;
        try{
            //Crear el buffer y abrir el archivo
            //El argumento true indica que queremos escribir al final del
            //archivo, conservando todo los que tenia antes de escribir
            //lector=new Scanner(nombreArchivoAbsoluto);
            lector=new BufferedReader(
                    new FileReader(nombreArchivoAbsoluto));
            String texto="";
            String linea=lector.readLine();
            while(linea!=null){
                texto+=linea+"\n";
                linea=lector.readLine();
            }
            JOptionPane.showMessageDialog(this, texto);
        
        }catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }catch(IOException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            //Intentar cerrar y liberar el archivo (confirmar el guardado)
            try{
                lector.close();
            }catch(Exception ex){
            }
        }
    }//GEN-LAST:event_btnLeerActionPerformed

    private void btnLlenarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarTablaActionPerformed
        //Identificar la ruta del archivo
        String nombreArchivoRelativo="verano.txt";
        String nombreArchivoAbsoluto="c:\\poo\\verano.pvf";
        //Scanner lector=null;
        BufferedReader lector=null;
        try{
            //Crear el buffer y abrir el archivo
            //El argumento true indica que queremos escribir al final del
            //archivo, conservando todo los que tenia antes de escribir
            //lector=new Scanner(nombreArchivoAbsoluto);
            lector=new BufferedReader(
                    new FileReader(nombreArchivoAbsoluto));
            DefaultTableModel contenidoTabla= 
                    (DefaultTableModel)tblContenido.getModel();
            
            String linea=lector.readLine();
            Object[] fila;
            while(linea!=null){
                fila=new Object[1];
                fila[0]=linea;
                contenidoTabla.addRow(fila);
                //contenidoTabla.addRow(new Object[]{linea});
                linea=lector.readLine();
            }
            
        
        }catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Archivo no encontrado");
        }catch(IOException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            //Intentar cerrar y liberar el archivo (confirmar el guardado)
            try{
                lector.close();
            }catch(Exception ex){
            }
        }
    }//GEN-LAST:event_btnLlenarTablaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsoArchivos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscribirFinal;
    private javax.swing.JButton btnEscribirInicio;
    private javax.swing.JButton btnLeer;
    private javax.swing.JButton btnLlenarTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblContenido;
    private javax.swing.JTextField txtTexto;
    // End of variables declaration//GEN-END:variables
}

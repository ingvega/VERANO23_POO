/*
Catálogo (Agregar,Editar,Eliminar y Consultar) ABC (Altas-Bajas-Cambios
CRUD(Create, Read, Update, Delete)
*/


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectopoo.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectopoo.modelos.Usuario;
import proyectopoo.operaciones.DAOUsuario;

/**
 *
 * @author paveg
 */
public class FrmListaUsuarios extends javax.swing.JFrame {

    /**
     * Creates new form FrmListaUsuarios
     */
    public FrmListaUsuarios() {
        initComponents();
        pnlRegistro.setVisible(false);
        cargarUsuarios();
    }

    private void cargarUsuarios(){
        ArrayList<Usuario> listaUsuarios=
                new DAOUsuario().leerUsuarios();
        DefaultTableModel contenidoTabla=
                (DefaultTableModel) tblUsuarios.getModel();
        contenidoTabla.setRowCount(0);
        for(Usuario usuario:listaUsuarios){
            contenidoTabla.addRow(usuario.toArray());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pnlRegistro = new javax.swing.JPanel();
        cboTipo = new javax.swing.JComboBox<>();
        txtContrasenia = new javax.swing.JPasswordField();
        txtConfirmarContrasenia = new javax.swing.JPasswordField();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        txtApellidos = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "Tipo", "Usuario"
            }
        ));
        jScrollPane1.setViewportView(tblUsuarios);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Coordinador" }));

        txtContrasenia.setText("jPasswordField1");

        txtConfirmarContrasenia.setText("jPasswordField1");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel6.setText("Confirmar contraseña");

        jLabel1.setText("Nombre");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellidos");

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        jLabel3.setText("Usuario");

        jLabel4.setText("Contraseña");

        jLabel5.setText("Tipo");

        javax.swing.GroupLayout pnlRegistroLayout = new javax.swing.GroupLayout(pnlRegistro);
        pnlRegistro.setLayout(pnlRegistroLayout);
        pnlRegistroLayout.setHorizontalGroup(
            pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(btnAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addGap(16, 16, 16)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtConfirmarContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlRegistroLayout.setVerticalGroup(
            pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConfirmarContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar))
                            .addComponent(pnlRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 108, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        pnlRegistro.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        txtNombre.setText("");
        txtApellidos.setText("");
        txtUsuario.setText("");
        txtContrasenia.setText("");
        txtConfirmarContrasenia.setText("");
        cboTipo.setSelectedIndex(1);
        txtNombre.requestFocus();
        txtUsuario.setEnabled(true);
        pnlRegistro.setVisible(true);        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private boolean validar(){
        boolean esValido=true;
        String mensaje="";
        //Nombre (2-20)
        if(txtNombre.getText().trim().length()<2 || 
            txtNombre.getText().trim().length()>20){
            esValido=false;
            mensaje+="- El nombre debe tener entre 2 y 20 caracteres\n";
        }
        //Apellidos (3-40)
        if(txtApellidos.getText().trim().length()<3 || 
            txtApellidos.getText().trim().length()>40){
            esValido=false;
            mensaje+="- Los apellidos deben tener entre 3 y 40 caracteres\n";
        }
        //Usuario (6-15)
        if(txtUsuario.getText().trim().length()<6 || 
            txtUsuario.getText().trim().length()>15){
            esValido=false;
            mensaje+="- El usuario debe tener entre 6 y 15 caracteres\n";
        }
        //Contraseña (6-10)
        if(txtContrasenia.getText().trim().length()<6 || 
            txtContrasenia.getText().trim().length()>10){
            esValido=false;
            mensaje+="- La contraseña debe tener entre 6 y 10 caracteres\n";
        }
        //ConfirmarContraseña (6-10) verificar que es igual que contraseña
        if(!txtConfirmarContrasenia.getText().trim().equals(
            txtContrasenia.getText().trim())){
            esValido=false;
            mensaje+="- Las contraseñas no coinciden\n";
        }
        
        if(!esValido){
            JOptionPane.showMessageDialog(this,"No se puede continuar "
                    + "con la operación debido a que se encontraron los "
                    + "siguiente inconvenientes: \n" + mensaje,
                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
        }
        return esValido;
    }
    
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        //Validar datos
        if(!validar()) return;
        //Llenar el usuario con los datos
        Usuario usuario=new Usuario();
        usuario.setNombre(txtNombre.getText().trim());
        usuario.setApellidos(txtApellidos.getText().trim());
        usuario.setTipo(cboTipo.getSelectedItem().toString());
        usuario.setUsuario(txtUsuario.getText().trim());
        usuario.setContrasenia(txtContrasenia.getText().trim());
        DAOUsuario dao=new DAOUsuario();
        //Identificar si voy a agregar o a editar
        if(txtUsuario.isEnabled()){
            //Agregar
            //Verificar si no está duplicado
            ArrayList<Usuario> usuariosExistentes=
                    dao.leerUsuarios();
            if(usuariosExistentes.contains(usuario)){
                JOptionPane.showMessageDialog(this,"Ya existe un usuario "
                            + "registrado con el nombre de usuario ingresado",
                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
                    return;
            }
            
//            for (int i = 0; i < usuariosExistentes.size(); i++) {
//                if(usuariosExistentes.get(i).getUsuario().equals(
//                        usuario.getUsuario())){
//                    JOptionPane.showMessageDialog(this,"Ya existe un usuario "
//                            + "registrado con el nombre de usuario ingresado",
//                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
//                    return;
//                }
//            }
            //Almacenar el nuevo usuario en el archivo
            if(dao.agregar(usuario)){
                JOptionPane.showMessageDialog(this,"Usuario almacenado",
                    "Lista de usuarios",JOptionPane.INFORMATION_MESSAGE);
                //Actualizar la tabla
                cargarUsuarios();
                pnlRegistro.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(this,"Error al intentar almacenar el usuario",
                    "Lista de usuarios",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            //Editar
             //Almacenar el nuevo usuario en el archivo
            if(dao.editar(usuario)){
                JOptionPane.showMessageDialog(this,"Usuario almacenado",
                    "Lista de usuarios",JOptionPane.INFORMATION_MESSAGE);
                //Actualizar la tabla
                cargarUsuarios();
                pnlRegistro.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(this,"Error al intentar almacenar el usuario",
                    "Lista de usuarios",JOptionPane.ERROR_MESSAGE);
            }
        }
        //Actualizar la tabla
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        //Verificar que haya un elemento seleccionado
        int filaSeleccionada=tblUsuarios.getSelectedRow();
        if(filaSeleccionada>=0){
            String usuario=tblUsuarios.getValueAt(filaSeleccionada, 
                    3).toString();
            //Buscar ese usuario en el archivo
            Usuario usuarioEncontrado=new DAOUsuario().buscar(usuario);
            if(usuarioEncontrado!=null){
                txtNombre.setText(usuarioEncontrado.getNombre());
                txtApellidos.setText(usuarioEncontrado.getApellidos());
                txtUsuario.setText(usuarioEncontrado.getUsuario());
                txtContrasenia.setText(usuarioEncontrado.getContrasenia());
                txtConfirmarContrasenia.setText(usuarioEncontrado.getContrasenia());
//                if(usuarioEncontrado.getTipo().equals("Administrador")){
//                    cboTipo.setSelectedIndex(0);
//                }else{
//                    cboTipo.setSelectedIndex(1);
//                }
                cboTipo.setSelectedItem(usuarioEncontrado.getTipo());
                txtUsuario.setEnabled(false);
                pnlRegistro.setVisible(true);      
            }else{
                JOptionPane.showMessageDialog(this,
                    "Usuario no encontrado",
                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this,
                    "Primero debes seleccionar un usuario",
                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada=tblUsuarios.getSelectedRow();
        if(filaSeleccionada>=0){
            String usuario=tblUsuarios.getValueAt(filaSeleccionada, 
                    3).toString();
            //Solicitar confirmación de borrado
            int respuesta= JOptionPane.showConfirmDialog(this,
                    "Estás a punto de eliminar el usuario " +
                    usuario + " ¿Deseas continuar?");
            if(respuesta==JOptionPane.YES_OPTION){
                if(new DAOUsuario().eliminar(usuario)){
                    //Informar que se borró
                    JOptionPane.showMessageDialog(this,
                    "Usuario eliminado",
                    "Lista de usuarios",JOptionPane.INFORMATION_MESSAGE);
                    //Actualizar la tabla
                    cargarUsuarios();
                }else{
                    //informar de error al borrar
                    JOptionPane.showMessageDialog(this,
                    "Usuario no encontrado",
                    "Lista de usuarios",JOptionPane.ERROR_MESSAGE);
                }
            }
            
            
        }else{
            JOptionPane.showMessageDialog(this,
                    "Primero debes seleccionar un usuario",
                    "Lista de usuarios",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmListaUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlRegistro;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JPasswordField txtConfirmarContrasenia;
    private javax.swing.JPasswordField txtContrasenia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
